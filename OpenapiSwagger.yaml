openapi: 3.0.0
info:
  title: iMesero API (Clientee y Admin)
  version: "1.0.8"
servers:
  - url: http://localhost:8000/api
    description: Development server

tags:
  - name: Comun
    description: Autenticación y usuario
  - name: Cliente
    description: Operaciones de cliente (anónimos o autenticados)
  - name: Admin
    description: Operaciones de administrador
  - name: Front
    description:  Peticiones para generar un front dinamico.

paths:
  # Comun
  /login:
    post:
      tags: [Comun]
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Token generado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'

  /logout:
    post:
      tags: [Comun]
      summary: Cerrar sesión
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Logout exitoso

  /user:
    get:
      tags: [Comun]
      summary: Obtener usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos de usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # Mesas
  /mesas:
    get:
      tags: [Comun]
      summary: Listar mesas
      responses:
        '200':
          description: Array de mesas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mesa'
    post:
      tags: [Admin]
      summary: Crear mesa
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MesaCreate'
      responses:
        '201':
          description: Mesa creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesa'

  /mesas/{mesaId}:
    parameters:
      - $ref: '#/components/parameters/mesaId'
    get:
      tags: [Comun]
      summary: Detalle de mesa si la mesa no esta ocupada, si la mesa esta opcuapada devueleve la comanda, su total y los items en ella 
      responses:
        '200':
          description: Mesa encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesa'
    put:
      tags: [Admin]
      summary: Actualizar mesa
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MesaUpdate'
      responses:
        '200':
          description: Mesa actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mesa'
    delete:
      tags: [Admin]
      summary: Eliminar mesa
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Mesa eliminada

  /mesas/{mesaId}/items:
    parameters:
      - $ref: '#/components/parameters/mesaId'
    post:
      tags: [Cliente]
      summary: Añadir ítem a la comanda (crea/recupera comanda)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComandaItemRequest'
      responses:
        '201':
          description: Ítem añadido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComandaItemResponse'
  /mesas/{mesaId}/confirm:
    parameters:
      - $ref: '#/components/parameters/mesaId'
    patch:
      tags: [Cliente]
      summary: Cliente confirma los items de la comanda no confirmados a partir del id de mesa
      responses:
        '200':
          description: Ítems confirmados

  # Categorías
  /categorias:
    get:
      tags: [Front]
      summary: Listar categorías
      responses:
        '200':
          description: Array de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categoria'
    post:
      tags: [Admin]
      summary: Crear categoría
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaCreate'
      responses:
        '201':
          description: Categoría creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'

  /categorias/{categoriaId}:
    parameters:
      - $ref: '#/components/parameters/categoriaId'
    get:
      tags: [Front]
      summary: Detalle de categoría
      responses:
        '200':
          description: Categoría encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categoria'
    put:
      tags: [Admin]
      summary: Actualizar categoría
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriaUpdate'
      responses:
        '200':
          description: Categoría actualizada
    delete:
      tags: [Admin]
      summary: Eliminar categoría
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Categoría eliminada

  # Productos
  /productos:
    get:
      tags: [Front]
      summary: Listar productos
      responses:
        '200':
          description: Array de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
    post:
      tags: [Admin]
      summary: Crear producto
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoCreate'
      responses:
        '201':
          description: Producto creado

  /productos/{productoId}:
    parameters:
      - $ref: '#/components/parameters/productoId'
    get:
      tags: [Front]
      summary: Detalle de producto
      responses:
        '200':
          description: Producto encontrado
    put:
      tags: [Admin]
      summary: Actualizar producto
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoUpdate'
      responses:
        '200':
          description: Producto actualizado
    delete:
      tags: [Admin]
      summary: Eliminar producto
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Producto eliminado

  # Comandas
  /comandas:
    get:
      tags: [Admin]
      summary: Listar comandas del cliente
      responses:
        '200':
          description: Array de comandas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComandaResponse'
    post:
      tags: [Admin]
      summary: Crear comanda
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComandaCreate'
      responses:
        '201':
          description: Comanda creada

  /comandas/{comandaId}:
    parameters:
      - $ref: '#/components/parameters/comandaId'
    get:
      tags: [Front]
      summary: Detalle de comanda (con items y total)
      responses:
        '200':
          description: Comanda encontrada
    put:
      tags: [Admin]
      summary: Actualizar comanda
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComandaUpdate'
      responses:
        '200':
          description: Comanda actualizada
    delete:
      tags: [Admin]
      summary: Eliminar comanda
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Comanda eliminada

  /comandas/{comandaId}/items:
    parameters:
      - $ref: '#/components/parameters/comandaId'
    get:
      tags: [Front]
      summary: Listar ítems de una comanda
      responses:
        '200':
          description: Array de ítems
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ComandaItemResponse'

  # Ítems de comanda

  /comanda-items/{itemId}:
    parameters:
      - $ref: '#/components/parameters/itemId'
    get:
      tags: [Front]
      summary: Obtener detalle de un ítem
      responses:
        '200':
          description: Ítem encontrado
    put:
      tags: [Admin]
      summary: Avanzar estado de ítem (cocina, camino, entregado…)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComandaItemUpdate'
      responses:
        '200':
          description: Ítem actualizado
    delete:
      tags: [Admin]
      summary: Eliminar ítem de comanda
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Ítem eliminado

  # Estados de ítems
  /estados-items:
    get:
      tags: [Front]
      summary: Listar estados de ítems
      responses:
        '200':
          description: Array de estados
    post:
      tags: [Admin]
      summary: Crear estado de ítem
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstadoItemCreate'
      responses:
        '201':
          description: Estado creado

  /estados-items/{estadoItemId}:
    parameters:
      - $ref: '#/components/parameters/estadoItemId'
    get:
      tags: [Front]
      summary: Detalle de estado de ítem
      responses:
        '200':
          description: Estado encontrado
    put:
      tags: [Admin]
      summary: Actualizar estado de ítem
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstadoItemUpdate'
      responses:
        '200':
          description: Estado actualizado
    delete:
      tags: [Admin]
      summary: Eliminar estado de ítem
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Estado eliminado

  # Estados de comanda
  /estado-comandas:
    get:
      tags: [Front]
      summary: Listar estados de comanda
      responses:
        '200':
          description: Array de estados

  /estado-comandas/{estadoComandaId}:
    parameters:
      - $ref: '#/components/parameters/estadoComandaId'
    get:
      tags: [Front]
      summary: Detalle de estado de comanda
      responses:
        '200':
          description: Estado encontrado

  # Métodos de pago
  /metodos-pago:
    get:
      tags: [Front]
      summary: Listar métodos de pago
      responses:
        '200':
          description: Array de métodos
    post:
      tags: [Admin]
      summary: Crear método de pago
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetodoPagoCreate'
      responses:
        '201':
          description: Método creado

  /metodos-pago/{metodoPagoId}:
    parameters:
      - $ref: '#/components/parameters/metodoPagoId'
    put:
      tags: [Admin]
      summary: Actualizar método de pago
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetodoPagoUpdate'
      responses:
        '200':
          description: Método actualizado
    delete:
      tags: [Admin]
      summary: Eliminar método de pago
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Método eliminado

  # Pagos
  /pagos:
    get:
      tags: [Admin]
      summary: Listar pagos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array de pagos
    post:
      tags: [Admin]
      summary: Registrar pago
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagoCreate'
      responses:
        '201':
          description: Pago registrado

  /pagos/{pagoId}:
    parameters:
      - $ref: '#/components/parameters/pagoId'
    get:
      tags: [Admin]
      summary: Detalle de pago
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Pago encontrado
    put:
      tags: [Admin]
      summary: Actualizar pago
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagoUpdate'
      responses:
        '200':
          description: Pago actualizado
    delete:
      tags: [Admin]
      summary: Eliminar pago
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Pago eliminado

  # Usuarios
  /usersAll:
    get:
      tags: [Admin]
      summary: Listar usuarios
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Array de usuarios

  /delete-user:
    delete:
      tags: [Admin]
      summary: Eliminar usuario
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Usuario eliminado

components:
  parameters:
    mesaId:
      name: mesaId
      in: path
      required: true
      schema:
        type: integer
      example: 1
    categoriaId:
      name: categoriaId
      in: path
      required: true
      schema:
        type: integer
      example: 3
    productoId:
      name: productoId
      in: path
      required: true
      schema:
        type: integer
      example: 5
    comandaId:
      name: comandaId
      in: path
      required: true
      schema:
        type: integer
      example: 7
    itemId:
      name: itemId
      in: path
      required: true
      schema:
        type: integer
      example: 12
    estadoItemId:
      name: estadoItemId
      in: path
      required: true
      schema:
        type: integer
      example: 1
    estadoComandaId:
      name: estadoComandaId
      in: path
      required: true
      schema:
        type: integer
      example: 2
    metodoPagoId:
      name: metodoPagoId
      in: path
      required: true
      schema:
        type: integer
      example: 1
    pagoId:
      name: pagoId
      in: path
      required: true
      schema:
        type: integer
      example: 3

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string

    Mesa:
      type: object
      properties:
        id:
          type: integer
        codigo:
          type: string
        ocupada:
          type: boolean
        capacidad:
          type: integer

    MesaCreate:
      type: object
      required:
        - codigo
        - capacidad
      properties:
        codigo:
          type: string
        capacidad:
          type: integer

    MesaUpdate:
      allOf:
        - $ref: '#/components/schemas/MesaCreate'
        - type: object
          properties:
            ocupada:
              type: boolean

    Categoria:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string

    CategoriaCreate:
      type: object
      required:
        - nombre
      properties:
        nombre:
          type: string

    CategoriaUpdate:
      $ref: '#/components/schemas/CategoriaCreate'

    Producto:
      type: object
      properties:
        id:
          type: integer
        categoria_id:
          type: integer
        imagen:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        ingredientes:
          type: string
        precio:
          type: number
          format: float
        disponible:
          type: boolean
        recomendada:
          type: boolean

    ProductoCreate:
      type: object
      required:
        - categoria_id
        - nombre
        - precio
      properties:
        categoria_id:
          type: integer
        imagen:
          type: string
        nombre:
          type: string
        descripcion:
          type: string
        ingredientes:
          type: string
        precio:
          type: number
          format: float
        disponible:
          type: boolean
        recomendada:
          type: boolean

    ProductoUpdate:
      $ref: '#/components/schemas/ProductoCreate'

    ComandaCreate:
      type: object
      required:
        - mesa_id
      properties:
        mesa_id:
          type: integer
        user_id:
          type: integer
          nullable: true
        anonimo:
          type: boolean

    ComandaResponse:
      type: object
      properties:
        id:
          type: integer
        mesa_id:
          type: integer
        user_id:
          type: integer
          nullable: true
        anonimo:
          type: boolean
        estado_comanda_id:
          type: integer
        total:
          type: number
          format: float
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        mesa:
          $ref: '#/components/schemas/Mesa'
        items:
          type: array
          items:
            $ref: '#/components/schemas/ComandaItemResponse'
        estadoComanda:
          $ref: '#/components/schemas/EstadoComanda'

    ComandaUpdate:
      type: object
      properties:
        estado_comanda_id:
          type: integer

    ComandaItemRequest:
      type: object
      required:
        - producto_id
        - cantidad
      properties:
        producto_id:
          type: integer
        cantidad:
          type: integer

    ComandaItemResponse:
      type: object
      properties:
        id:
          type: integer
        comanda_id:
          type: integer
        producto_id:
          type: integer
        cantidad:
          type: integer
        precio_unitario:
          type: number
          format: float
        estado_item_id:
          type: integer
        producto:
          type: object
        estado:
          type: object

    ComandaItemUpdate:
      type: object
      required:
        - estado_item_id
      properties:
        estado_item_id:
          type: integer

    EstadoItem:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        orden:
          type: integer

    EstadoItemCreate:
      type: object
      required:
        - nombre
        - orden
      properties:
        nombre:
          type: string
        orden:
          type: integer

    EstadoItemUpdate:
      $ref: '#/components/schemas/EstadoItemCreate'

    EstadoComanda:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        orden:
          type: integer

    MetodoPago:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string

    MetodoPagoCreate:
      type: object
      required:
        - nombre
      properties:
        nombre:
          type: string

    MetodoPagoUpdate:
      $ref: '#/components/schemas/MetodoPagoCreate'

    Pago:
      type: object
      properties:
        id:
          type: integer
        metodo_pago_id:
          type: integer
        comanda_id:
          type: integer
        monto:
          type: number
          format: float
        referencia:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PagoCreate:
      type: object
      required:
        - metodo_pago_id
        - comanda_id
        - monto
      properties:
        metodo_pago_id:
          type: integer
        comanda_id:
          type: integer
        monto:
          type: number
          format: float
        referencia:
          type: string

    PagoUpdate:
      $ref: '#/components/schemas/PagoCreate'
